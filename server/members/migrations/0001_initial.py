# Generated by Django 5.1.3 on 2024-12-01 22:31

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image_url', models.URLField(max_length=500)),
                ('popularity', models.IntegerField(default=0)),
                ('user_fav_track', models.CharField(default="You don't seem to have one favorite!", max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image_url', models.URLField(max_length=500)),
                ('user_fav_track', models.CharField(default="You don't seem to have one favorite!", max_length=255)),
                ('artist', models.ForeignKey(blank=True, default='Unknown', on_delete=django.db.models.deletion.CASCADE, to='members.artist')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('profile_id', models.CharField(max_length=50, unique=True)),
                ('url', models.URLField(blank=True, max_length=500, null=True)),
                ('profile_picture', models.URLField(max_length=1000, null=True)),
                ('game_score', models.IntegerField(default=0)),
                ('top_score', models.IntegerField(default=0)),
                ('artists', models.ManyToManyField(blank=True, related_name='top_artists_for', to='members.artist')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.genre')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.profile')),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='genres',
            field=models.ManyToManyField(related_name='profiles', through='members.UserGenre', to='members.genre'),
        ),
        migrations.CreateModel(
            name='Wrapped',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=255)),
                ('genre_diversity', models.FloatField(default=20)),
                ('user_description', models.CharField(default='LLM API Failure', max_length=1000)),
                ('last_played', models.CharField(max_length=255)),
                ('wrap_id', models.CharField(max_length=255, unique=True)),
                ('date_updated', models.DateTimeField(null=True)),
                ('top_albums', models.ManyToManyField(related_name='wrapped_top_albums', to='members.album')),
                ('top_artists', models.ManyToManyField(related_name='wrapped_top_artists', to='members.artist')),
                ('top_genres', models.ManyToManyField(related_name='wrapped_top_genres', to='members.genre')),
            ],
        ),
    ]
